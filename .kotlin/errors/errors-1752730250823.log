kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/Completed Projects/Mindi/app/src/main/java/com/keylogic/mindi/Custom/IconTextConstraintLayout.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:setupChildren visibility:private modality:FINAL <> ($this:com.keylogic.mindi.Custom.IconTextConstraintLayout) returnType:kotlin.Unit
  $this: VALUE_PARAMETER name:<this> type:com.keylogic.mindi.Custom.IconTextConstraintLayout
  BLOCK_BODY
    CALL 'public open fun removeAllViews (): kotlin.Unit [fake_override] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=kotlin.Unit origin=null
      $this: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    VAR name:circleSize type:kotlin.Int [val]
      CALL 'public open fun toInt (): kotlin.Int declared in kotlin.Float' type=kotlin.Int origin=null
        $this: CALL 'public final fun times (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=MUL
          $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:labelTextSize type:kotlin.Float visibility:private' type=kotlin.Float origin=null
            receiver: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
          other: CONST Float type=kotlin.Float value=1.25
    VAR name:linearLayout type:android.widget.LinearLayout [val]
      CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=android.widget.LinearLayout origin=null
        <T>: android.widget.LinearLayout
        $receiver: CONSTRUCTOR_CALL 'public constructor <init> (p0: @[FlexibleNullability] android.content.Context?) declared in android.widget.LinearLayout' type=android.widget.LinearLayout origin=null
          p0: CALL 'public final fun getContext (): @[FlexibleNullability] android.content.Context? [fake_override] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[FlexibleNullability] android.content.Context? origin=GET_PROPERTY
            $this: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
        block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<android.widget.LinearLayout, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun setupChildren$lambda$3 (this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout): kotlin.Unit declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[ExtensionFunctionType] kotlin.Function1<android.widget.LinearLayout, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            this$0: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:circleView type:android.widget.ImageView? visibility:private' type=kotlin.Unit origin=null
      receiver: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
      value: CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=android.widget.ImageView origin=null
        <T>: android.widget.ImageView
        $receiver: CONSTRUCTOR_CALL 'public constructor <init> (p0: @[FlexibleNullability] android.content.Context?) declared in android.widget.ImageView' type=android.widget.ImageView origin=null
          p0: CALL 'public final fun getContext (): @[FlexibleNullability] android.content.Context? [fake_override] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[FlexibleNullability] android.content.Context? origin=GET_PROPERTY
            $this: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
        block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<android.widget.ImageView, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun setupChildren$lambda$4 ($circleSize: kotlin.Int, this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout): kotlin.Unit declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[ExtensionFunctionType] kotlin.Function1<android.widget.ImageView, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            $circleSize: GET_VAR 'val circleSize: kotlin.Int [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=kotlin.Int origin=null
            this$0: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:labelView type:com.keylogic.mindi.Custom.BorderTextView? visibility:private' type=kotlin.Unit origin=null
      receiver: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
      value: CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=com.keylogic.mindi.Custom.BorderTextView origin=null
        <T>: com.keylogic.mindi.Custom.BorderTextView
        $receiver: CONSTRUCTOR_CALL 'public constructor <init> (context: android.content.Context, attrs: android.util.AttributeSet?, defStyleAttr: kotlin.Int, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.keylogic.mindi.Custom.BorderTextView' type=com.keylogic.mindi.Custom.BorderTextView origin=DEFAULT_DISPATCH_CALL
          context: BLOCK type=android.content.Context origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
              CALL 'public final fun getContext (): @[FlexibleNullability] android.content.Context? [fake_override] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[FlexibleNullability] android.content.Context? origin=GET_PROPERTY
                $this: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
            CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
              value: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=kotlin.Any? origin=null
              expression: CONST String type=kotlin.String value="getContext(...)"
            GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=kotlin.Any? origin=null
          attrs: COMPOSITE type=android.util.AttributeSet? origin=DEFAULT_VALUE
            CONST Null type=android.util.AttributeSet? value=null
          defStyleAttr: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
            CONST Int type=kotlin.Int value=0
          $mask0: CONST Int type=kotlin.Int value=6
          $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
        block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<com.keylogic.mindi.Custom.BorderTextView, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun setupChildren$lambda$6 (this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout): kotlin.Unit declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[ExtensionFunctionType] kotlin.Function1<com.keylogic.mindi.Custom.BorderTextView, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            this$0: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    CALL 'public open fun addView (p0: @[FlexibleNullability] android.view.View?): kotlin.Unit [fake_override] declared in android.widget.LinearLayout' type=kotlin.Unit origin=null
      $this: GET_VAR 'val linearLayout: android.widget.LinearLayout [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=android.widget.LinearLayout origin=null
      p0: BLOCK type=android.widget.ImageView origin=FOLDED_ELVIS
        WHEN type=android.widget.ImageView origin=FOLDED_ELVIS
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0 type:android.widget.ImageView? [val]
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:circleView type:android.widget.ImageView? visibility:private' type=android.widget.ImageView? origin=null
                  receiver: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val tmp0: android.widget.ImageView? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=android.widget.ImageView? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: GET_VAR 'val tmp0: android.widget.ImageView? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=android.widget.ImageView? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: BLOCK type=kotlin.Unit origin=null
              CALL 'public final fun throwUninitializedPropertyAccessException (propertyName: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                propertyName: CONST String type=kotlin.String value="circleView"
    CALL 'public open fun addView (p0: @[FlexibleNullability] android.view.View?): kotlin.Unit [fake_override] declared in android.widget.LinearLayout' type=kotlin.Unit origin=null
      $this: GET_VAR 'val linearLayout: android.widget.LinearLayout [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=android.widget.LinearLayout origin=null
      p0: BLOCK type=com.keylogic.mindi.Custom.BorderTextView origin=FOLDED_ELVIS
        WHEN type=com.keylogic.mindi.Custom.BorderTextView origin=FOLDED_ELVIS
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0 type:com.keylogic.mindi.Custom.BorderTextView? [val]
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:labelView type:com.keylogic.mindi.Custom.BorderTextView? visibility:private' type=com.keylogic.mindi.Custom.BorderTextView? origin=null
                  receiver: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val tmp0: com.keylogic.mindi.Custom.BorderTextView? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.BorderTextView? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: GET_VAR 'val tmp0: com.keylogic.mindi.Custom.BorderTextView? [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.BorderTextView? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: BLOCK type=kotlin.Unit origin=null
              CALL 'public final fun throwUninitializedPropertyAccessException (propertyName: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                propertyName: CONST String type=kotlin.String value="labelView"
    CALL 'public open fun addView (p0: @[FlexibleNullability] android.view.View?): kotlin.Unit [fake_override] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=kotlin.Unit origin=null
      $this: GET_VAR '<this>: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
      p0: GET_VAR 'val linearLayout: android.widget.LinearLayout [val] declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren' type=android.widget.LinearLayout origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:setupChildren$lambda$6 visibility:private modality:FINAL <> ($receiver:com.keylogic.mindi.Custom.BorderTextView, this$0:com.keylogic.mindi.Custom.IconTextConstraintLayout) returnType:kotlin.Unit
  $receiver: VALUE_PARAMETER name:$this$apply type:com.keylogic.mindi.Custom.BorderTextView
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:this$0 index:0 type:com.keylogic.mindi.Custom.IconTextConstraintLayout
  BLOCK_BODY
    VAR name:$i$a$-apply-IconTextConstraintLayout$setupChildren$2 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    CALL 'public open fun setId (p0: kotlin.Int): kotlin.Unit [fake_override] declared in com.keylogic.mindi.Custom.BorderTextView' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$apply: com.keylogic.mindi.Custom.BorderTextView declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.BorderTextView origin=null
      p0: CALL 'public open fun generateViewId (): kotlin.Int [fake_override] declared in androidx.constraintlayout.widget.ConstraintLayout' type=kotlin.Int origin=null
    CALL 'public final fun <set-text> (value: kotlin.String): kotlin.Unit declared in com.keylogic.mindi.Custom.BorderTextView' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$apply: com.keylogic.mindi.Custom.BorderTextView declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.BorderTextView origin=null
      value: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:labelText type:kotlin.String visibility:private' type=kotlin.String origin=null
        receiver: GET_VAR 'this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    CALL 'public final fun <set-textSizePx> (value: kotlin.Float): kotlin.Unit declared in com.keylogic.mindi.Custom.BorderTextView' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$apply: com.keylogic.mindi.Custom.BorderTextView declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.BorderTextView origin=null
      value: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:labelTextSize type:kotlin.Float visibility:private' type=kotlin.Float origin=null
        receiver: GET_VAR 'this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null
    CALL 'public final fun <set-gravity> (value: kotlin.Int): kotlin.Unit declared in com.keylogic.mindi.Custom.BorderTextView' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$apply: com.keylogic.mindi.Custom.BorderTextView declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.BorderTextView origin=null
      value: CONST Int type=kotlin.Int value=8388611
    SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:maxLines type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
      value: CONST Int type=kotlin.Int value=1
    CALL 'public open fun setLayoutParams (p0: @[FlexibleNullability] android.view.ViewGroup.LayoutParams?): kotlin.Unit [fake_override] declared in com.keylogic.mindi.Custom.BorderTextView' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$apply: com.keylogic.mindi.Custom.BorderTextView declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.BorderTextView origin=null
      p0: CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=android.widget.LinearLayout.LayoutParams origin=null
        <T>: android.widget.LinearLayout.LayoutParams
        $receiver: CONSTRUCTOR_CALL 'public constructor <init> (p0: kotlin.Int, p1: kotlin.Int) declared in android.widget.LinearLayout.LayoutParams' type=android.widget.LinearLayout.LayoutParams origin=null
          p0: CONST Int type=kotlin.Int value=-1
          p1: CONST Int type=kotlin.Int value=-2
        block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<android.widget.LinearLayout.LayoutParams, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun setupChildren$lambda$6$lambda$5 (this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout): kotlin.Unit declared in com.keylogic.mindi.Custom.IconTextConstraintLayout' type=@[ExtensionFunctionType] kotlin.Function1<android.widget.LinearLayout.LayoutParams, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            this$0: GET_VAR 'this$0: com.keylogic.mindi.Custom.IconTextConstraintLayout declared in com.keylogic.mindi.Custom.IconTextConstraintLayout.setupChildren$lambda$6' type=com.keylogic.mindi.Custom.IconTextConstraintLayout origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:100)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:616)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:644)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:878)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:206)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:908)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 54 more
Caused by: java.lang.AssertionError: access of const val: SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:maxLines type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
  value: CONST Int type=kotlin.Int value=1

	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:861)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:206)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:908)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 74 more


